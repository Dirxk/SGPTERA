@{
    ViewData["Title"] = "NivelComplejidadTareas";
    var IdUsuario = ViewBag.IdUsuario;

}

<link rel="preconnect" href="https://fonts.googleapis.com">
<link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
<link href="https://fonts.googleapis.com/css2?family=Rubik:wght@500&display=swap" rel="stylesheet">

<!-- ================================================================================================= -->
<!-- ======================================== Codigo Principal ======================================= -->
<!-- ================================================================================================= -->
<div class="card d-flex flex-column">
    <div class="card-header d-flex flex-column flex-md-row align-items-center justify-content-center justify-content-md-between">
        <!-- Primera columna: Título -->
        <div class="col-12 col-md-6 d-flex align-items-center justify-content-center justify-content-md-start mb-3 mb-md-0">
            <i class="fa-solid fas fa-tasks fa-lg me-2 d-none d-md-block"></i>
            <i class="fa-solid fas fa-tasks me-2 mb-2 d-block d-md-none"></i>
            <h3 class="m-0 d-none d-md-block" style="font-family: 'Rubik', sans-serif; font-size: 1.25rem;">Complejidad de las tareas</h3>
            <h6 class="m-0 d-block d-md-none mb-1" style="font-family: 'Rubik', sans-serif; font-size: 1rem;">Complejidad de las tareas</h6>
        </div>

        <!-- Segunda columna: Búsqueda y botones -->
        <div class="col-12 col-md-6 d-flex justify-content-center justify-content-md-end gap-2 mt-2 mt-md-0">
            <!-- Input de búsqueda -->
            <input id="inputBusqueda" class="form-control form-control-sm w-50" type="search" placeholder="Buscar" aria-label="Search">
            <!-- Botón de búsqueda -->
            <button id="btnBuscar" class="btn btn-info btn-sm" type="submit">
                <i class="fas fa-search"></i>
            </button>
            <!-- Botón de recargar -->
            <button type="button" id="btnReloadNivelComplejidadTareas" name="btnReloadNivelComplejidadTareas" class="btn btn-warning btn-sm">
                <i class="fas fa-sync-alt"></i>
            </button>
            <!-- Botón de agregar EstatusProyecto -->
            <button type="button" class="btn btn-success btn-sm" data-bs-toggle="modal" data-bs-target="#UserModal">
                <i class="fas fa-plus"></i>
            </button>
        </div>
    </div>
    <div class="card-body p-3 flex-grow-1">
        <div class="table-responsive scrollbar h-100">
            <!-- Grilla de NivelComplejidadTareas -->
            <div id="GridNivelComplejidadTareas" style="width: 100%; height: calc(75vh - 50px);"></div>
            <!-- Mensaje de "EstatusProyecto no encontrado" -->
            <div id="mensajeNoEncontrado" class="text-danger mt-2" style="display: none;">Complejidad de la tarea no encontrada</div>
        </div>
    </div>
</div>

<!-- ================================================================================================= -->
<!-- =============================== Modal nuevo NivelComplejidadTareas ===============================  -->
<!-- ================================================================================================= -->

<div class="modal fade" id="UserModal" tabindex="-1" aria-labelledby="UserModalLabel" aria-hidden="true" data-bs-backdrop="static" data-bs-keyboard="false">
    <div class="modal-dialog modal-dialog-centered modal-dialog-scrollable">
        <div class="modal-content">
            <form id="FormCrearProyecto">
                <div class="modal-header">
                    <h3 class="modal-title" id="UserModalLabel">Agregar nuevo Nivel de Complejidad de la Tarea</h3>
                    <button type="button" class="btn-close cerrarModal" data-bs-dismiss="modal" aria-label="Cerrar"></button>
                </div>
                <div class="modal-body">
                    <div class="row">
                        <!-- Campo: NivelComplejidadTareasDescripcion -->
                        <div class="col-12 mb-3">
                            <div class="form-floating">
                                <input type="text" class="form-control" id="InpNivelComplejidadTareasDescripcion" name="InpNivelComplejidadTareasDescripcion" required placeholder="Estatus" maxlength="150" autocomplete="off">
                                <label for="InpNivelComplejidadTareasDescripcion">Nivel de complejidad de la tarea <span class="text-danger">*</span></label>
                            </div>
                        </div>
                        <!-- Campo: Detalles -->
                        <div class="col-12 mb-3">
                            <div class="form-floating">
                                <input type="text" class="form-control" id="InpDetalles" name="InpEstatusDetalles" required placeholder="Detalles" maxlength="150" autocomplete="off">
                                <label for="InpDetalles">Detalles <span class="text-danger">*</span></label>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-danger cerrarModal" data-bs-dismiss="modal">
                        <i class="fas fa-ban me-2"></i>Cancelar
                    </button>
                    <button type="submit" class="btn btn-success px-5" id="BtnAgregarNivelComplejidadTareaExt">
                        <i class="fas fa-folder-plus me-3"></i>Agregar Complejidad
                    </button>
                </div>
            </form>
        </div>
    </div>
</div>

<!-- ================================================================================================= -->
<!-- ============================== Modal editar NivelComplejidadTareas =============================== -->
<!-- ================================================================================================= -->

<div class="modal fade" id="ModalEditarNivelComplejidadTarea" tabindex="-1" aria-labelledby="ModalEditarNivelComplejidadTareaLabel" aria-hidden="true" data-bs-backdrop="static" data-bs-keyboard="false">
    <div class="modal-dialog modal-dialog-centered modal-dialog-scrollable">
        <div class="modal-content">
            <form id="FormEditarNivelComplejidadTarea">
                <div class="modal-header">
                    <h5 class="modal-title" id="ModalEditarNivelComplejidadTareaLabel">Editar Nivel de Complejidad de la Tarea</h5>
                    <button type="button" class="btn-close cerrarModalEditarNivelComplejidadTarea" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                    <div class="row">
                        <!-- Campo: NivelComplejidadTareasDescripcion -->
                        <div class="col-12 mb-3">
                            <div class="form-floating">
                                <input type="text" class="form-control" id="InpNivelComplejidadTareasDescripcionEdit" name="InpNivelComplejidadTareasDescripcionEdit" required placeholder="Estatus" maxlength="60" autocomplete="off">
                                <label for="InpNivelComplejidadTareasDescripcionEdit">Nivel de complejidad de la tarea </label>
                            </div>
                        </div>
                        <!-- Campo: Detalles -->
                        <div class="col-12 mb-3">
                            <div class="form-floating">
                                <input type="text" class="form-control" id="InpDetallesEdit" name="InpDetallesEdit" required placeholder="Detalles" maxlength="150" autocomplete="off">
                                <label for="InpDetallesEdit">Detalles </label>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-danger cerrarModalEditarNivelComplejidadTarea">Cancelar</button>
                    <button type="button" class="btn btn-success EditarNivelComplejidadTarea" id="btnActualizarNivelComplejidadTarea">Actualizar Complejidad</button>
                </div>
            </form>
        </div>
    </div>
</div>

<!-- ================================================================================================= -->
<!-- ============================= Modal eliminar NivelComplejidadTareas ============================== -->
<!-- ================================================================================================= -->

<div class="modal fade" data-bs-backdrop="static" data-bs-keyboard="false" id="ModalEliminarNivelComplejidadTarea" tabindex="-1" aria-labelledby="verticallyCenteredModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered">
        <div class="modal-content">
            <form id="FormEliminarNivelComplejidadTarea">
                <div class="modal-header">
                    <h5 class="modal-title" id="verticallyCenteredModalLabel">Eliminar Nivel de Complejidad de la Tarea</h5>
                    <button class="btn p-1" type="button" data-bs-dismiss="modal" aria-label="Close">
                        <span class="fas fa-times fs--1"></span>
                    </button>
                </div>
                <div class="modal-body">
                    <p class="text-700 lh-lg mb-0">
                        ¿Desea eliminar el nivel de complejidad: <strong class="nombreNivelComplejidadTarea"></strong>?
                    </p>
                </div>
                <div class="modal-footer">
                    <div class="col-auto">
                        <button class="btn btn-primary me-1 mb-1" type="button" data-bs-dismiss="modal">Cancelar</button>
                    </div>
                    <div class="col-auto">
                        <button class="btn btn-danger me-1 mb-1" type="submit" id="BtnEliminarNivelComplejidadTarea">Eliminar</button>
                    </div>
                </div>
            </form>
        </div>
    </div>
</div>

<!-- ================================================================================================= -->
<!-- ============================= Modal reactivar NivelComplejidadTareas ============================= -->
<!-- ================================================================================================= -->

<div class="modal fade" data-bs-backdrop="static" data-bs-keyboard="false" id="ModalConfirmarNivelComplejidadTarea" tabindex="-1" aria-labelledby="verticallyCenteredModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered">
        <div class="modal-content">
            <form id="FormConfirmarNivelComplejidadTarea">
                <div class="modal-header">
                    <h5 class="modal-title" id="verticallyCenteredModalLabel">Reactivar Nivel de Complejidad de la Tarea</h5>
                    <button class="btn p-1" type="button" data-bs-dismiss="modal" aria-label="Close">
                        <span class="fas fa-times fs--1"></span>
                    </button>
                </div>
                <div class="modal-body">
                    <p class="text-700 lh-lg mb-0">
                        ¿Desea reactivar el nivel de complejidad: <strong class="nombreConfirmarNivelComplejidadTarea"></strong>?
                    </p>
                </div>
                <div class="modal-footer">
                    <div class="col-auto">
                        <button class="btn btn-primary me-1 mb-1" type="button" data-bs-dismiss="modal">Cancelar</button>
                    </div>
                    <div class="col-auto">
                        <button class="btn btn-success me-1 mb-1" type="submit" id="BtnConfirmarNivelComplejidadTarea">Reactivar</button>
                    </div>
                </div>
            </form>
        </div>
    </div>
</div>


@section Scripts {
    <script src="https://cdnjs.cloudflare.com/ajax/libs/jquery-validate/1.19.5/jquery.validate.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
    <script>

        //============================================================================================================================\\
        //====================================================  Variables Globales  ===================================================\\
        //==============================================================================================================================\\
        // Variable global para almacenar la instancia de la grilla de NivelComplejidadTareas.
        var GridNivelComplejidadTareas = null;

        // Función que realiza una solicitud AJAX para obtener los NivelComplejidadTareas desde el servidor.
        function verNivelComplejidadTareas() {
            return new Promise((resolve, reject) => {
                const startTime = performance.now(); // Inicia el contador para medir el tiempo de respuesta.

                $.ajax({
                    type: 'POST', // Método HTTP utilizado para la solicitud.
                    data: {}, // Datos enviados al servidor (en este caso, vacío).
                    url: '@Url.Action("GetNivelComplejidadTareas", "Catalogos")',
                    success: function (datos) {
                        const endTime = performance.now(); // Finaliza el contador de tiempo.
                        const serverResponseTime = endTime - startTime; // Calcula el tiempo de respuesta del servidor.
                        GridNivelComplejidadTareas.itemsSource = datos.data; // Asigna los datos recibidos a la grilla de NivelComplejidadTareas.
                        resolve(serverResponseTime); // Resuelve la promesa con el tiempo de respuesta.
                    },
                    error: function () {
                        console.error("Error al obtener los NivelComplejidadTareas."); // Maneja errores en la solicitud.
                        reject(); // Rechaza la promesa en caso de error.
                    }
                });
            });
        }

        //============================================================================================================================\\
        //================================  Función para editar un Puesto específico basado en su ID  ================================\\
        //==============================================================================================================================\\

        function EditarNivelComplejidadTarea(id) {
            const nivelcomplejidadtarea = GridNivelComplejidadTareas.itemsSource.find(c => c.id === id); // Busca el Estatus del Proyecto en la grilla.
            if (nivelcomplejidadtarea) {
                // Guardar los valores iniciales del Estatus del Proyecto
                valoresIniciales = {
                    descripcion: nivelcomplejidadtarea.nivelComplejidadTareaDescripcion || '',
                    detalles: nivelcomplejidadtarea.detalles || ''
                };

                // Asigna los valores del Estatus del Proyecto a los campos del formulario de edición.
                $('#InpNivelComplejidadTareasDescripcionEdit').val(valoresIniciales.descripcion);
                $('#InpDetallesEdit').val(valoresIniciales.detalles);

                // Deshabilitar el botón de actualizar inicialmente
                $('#btnActualizarNivelComplejidadTarea').prop('disabled', true);

                // Muestra el modal de edición de Estatus del Proyecto.
                const ModalEditarNivelComplejidadTarea = new bootstrap.Modal($('#ModalEditarNivelComplejidadTarea')[0]);
                ModalEditarNivelComplejidadTarea.show();
                $('#btnActualizarNivelComplejidadTarea').data('id', id); // Asigna el ID del Estatus del Proyecto al botón de actualizar.
            } else {
                console.error("Nivel de complejidad de la tarea no encontrada."); // Maneja el caso en que el Estatus del Proyecto no existe.
            }
        }

        //============================================================================================================================\\
        //===============================  Inicialización del GRID NivelComplejidadTareas y Configuración de Eventos  ===============================\\
        //==============================================================================================================================\\

        $(document).ready(function () {

            //============================================================================================================================\\
            //================================================  Validaciones de los Inputs  ===============================================\\
            //==============================================================================================================================\\

            $("#InpNivelComplejidadTareasDescripcion, #InpNivelComplejidadTareasDescripcionEdit").on("input", function () {
                $(this).val(
                    $(this).val()
                        .replace(/[^a-zA-Z0-9\-,.&() ]/g, "") // Permite solo los caracteres especificados
                        .replace(/\.{2,}/g, ".") // Evita dos o más puntos juntos
                        .replace(/\-{2,}/g, "-") // Evita dos o más guiones juntos
                        .replace(/,{2,}/g, ",") // Evita dos o más comas juntas
                        .replace(/\({2,}/g, "(") // Evita dos o más paréntesis de apertura juntos
                        .replace(/\){2,}/g, ")") // Evita dos o más paréntesis de cierre juntos
                        .replace(/&{2,}/g, "&") // Evita dos o más ampersands juntos
                );
            });

            $("#InpDetalles, #InpDetallesEdit").on("input", function () {
                $(this).val(
                    $(this).val()
                        .replace(/[^a-zA-Z0-9\-,.&() ]/g, "") // Permite solo los caracteres especificados
                        .replace(/\.{2,}/g, ".") // Evita dos o más puntos juntos
                        .replace(/\-{2,}/g, "-") // Evita dos o más guiones juntos
                        .replace(/,{2,}/g, ",") // Evita dos o más comas juntas
                        .replace(/\({2,}/g, "(") // Evita dos o más paréntesis de apertura juntos
                        .replace(/\){2,}/g, ")") // Evita dos o más paréntesis de cierre juntos
                        .replace(/&{2,}/g, "&") // Evita dos o más ampersands juntos
                );
            });

            //============================================================================================================================\\
            //==========================================               GRID Principal                ======================================\\
            //==============================================================================================================================\\
            // Inicializa la grilla antes de llamar a verNivelComplejidadTareas()
            GridNivelComplejidadTareas = new wijmo.grid.FlexGrid('#GridNivelComplejidadTareas', {
                autoGenerateColumns: false,
                headersVisibility: 'Column',
                itemsSource: [],
                selectionMode: wijmo.grid.SelectionMode.Row,
                columns: [
                    { binding: '', header: '#', width: 50, align: 'center' },
                    { binding: 'nivelComplejidadTareaDescripcion', header: 'Complejidad de la tarea', width: '*', align: 'center' },
                    { binding: 'detalles', header: 'Detalles', width: '*', align: 'center' },
                    { header: '', isReadOnly: true, width: 80, align: 'center' }
                ],
                isReadOnly: true,
                itemFormatter: function (panel, r, c, cell) {
                    if (panel.cellType === wijmo.grid.CellType.Cell) {
                        const rowData = panel.rows[r].dataItem; // Obtiene los datos de la fila.
                        const flgActivo = rowData.flgActivo; // Verificar el valor de FlgActivo.

                        if (c === 0) {
                            cell.textContent = (r + 1).toString(); // Muestra el número de fila.
                        } else if (c === panel.columns.length - 1) {
                            // Crear los botones según el valor de FlgActivo
                            let botones = '';
                            if (flgActivo === true) {
                                botones = `
                                <div class="d-flex justify-content-center align-items-center gap-2">
                                    <button style="height: 25px; width: 25px;" class="btn btn-phoenix-secondary btn-icon fs--2 text-900 abrirModalEditarNivelComplejidadTarea" onclick="EditarNivelComplejidadTarea(${rowData.id})">
                                        <i class="fas fa-edit"></i>
                                    </button>
                                    <button style="height: 25px; width: 25px;" class="btn btn-phoenix-secondary btn-icon fs--2 text-danger abrirModalEliminarNivelComplejidadTarea" data-id="${rowData.id}" data-nombre="${rowData.nivelComplejidadTareaDescripcion}">
                                        <i class="fas fa-trash-alt"></i>
                                    </button>
                                </div>`;
                            } else if (flgActivo === false) {
                                botones = `
                                <div class="d-flex justify-content-center align-items-center gap-2">
                                    <button style="height: 25px; width: 25px;" class="btn btn-phoenix-secondary btn-icon fs--2 text-success abrirModalConfirmarNivelComplejidadTarea" data-id="${rowData.id}" data-nombre="${rowData.nivelComplejidadTareaDescripcion}">
                                        <i class="fas fa-check"></i>
                                    </button>
                                </div>`;
                            }

                            // Insertar los botones en la celda
                            cell.innerHTML = botones;
                        }
                    }
                }
            });

            // Llama a verNivelComplejidadTareas() después de inicializar la grilla
            verNivelComplejidadTareas();

            //============================================================================================================================\\
            //==========================================  Funcionalidad de Búsqueda y Autocompletar   =====================================\\
            //==============================================================================================================================\\

            $('#inputBusqueda').autocomplete({
                source: function (request, response) {
                    const term = request.term.toLowerCase(); // Obtiene el término de búsqueda.
                    const NivelComplejidadTareas = GridNivelComplejidadTareas.itemsSource; // Obtiene la lista de ModuloSistemas.
                    const resultados = NivelComplejidadTareas.filter(nivelcomplejidadtarea =>
                        nivelcomplejidadtarea.nivelComplejidadTareaDescripcion.toLowerCase().includes(term)
                    ).slice(0, 5);
                    response(resultados.map(nivelcomplejidadtarea => ({
                        label: `${nivelcomplejidadtarea.nivelComplejidadTareaDescripcion}`, // Muestra la descripción y tipo.
                        value: nivelcomplejidadtarea.nivelComplejidadTareaDescripcion // Asigna el ID del puesto como valor.
                    })));
                },
                select: function (event, ui) {
                    const nivelcomplejidadtareaId = ui.item.value; // Obtiene el ID del puesto seleccionado.
                    const nivelcomplejidadtarea = GridNivelComplejidadTareas.itemsSource.find(p => p.id === nivelcomplejidadtareaId); // Busca el puesto en la grilla.
                    if (nivelcomplejidadtarea) {
                        GridNivelComplejidadTareas.itemsSource = [nivelcomplejidadtarea]; // Filtra la grilla para mostrar solo el puesto seleccionado.
                    }
                }
            });

            // Evento para buscar al hacer clic en el botón de búsqueda.
            $('#btnBuscar').on('click', function () {
                const term = $('#inputBusqueda').val().toLowerCase(); // Obtiene el término de búsqueda.
                const NivelComplejidadTareas = GridNivelComplejidadTareas.itemsSource; // Obtiene la lista de ModuloSistemas.
                const resultados = NivelComplejidadTareas.filter(nivelcomplejidadtarea =>
                    nivelcomplejidadtarea.nivelComplejidadTareaDescripcion.toLowerCase().includes(term)
                ).slice(0, 5);

                if (resultados.length > 0) {
                    GridNivelComplejidadTareas.itemsSource = resultados; // Filtra la grilla para mostrar los resultados.
                    $('#mensajeNoEncontrado').hide(); // Oculta el mensaje de "Puesto no encontrado".
                } else {
                    Swal.fire({
                        icon: 'error',
                        title: 'Oops...',
                        text: 'No se encontró ningún resultado',
                    });
                }
            });

            // Evento para limpiar la búsqueda y mostrar todos los ModuloSistemas.
            $('#inputBusqueda').on('input', function () {
                if ($(this).val() === '') {
                    verNivelComplejidadTareas(); // Recarga todos los ModuloSistemas.
                    $('#mensajeNoEncontrado').hide(); // Oculta el mensaje de "Puesto no encontrado".
                }
            });


            //============================================================================================================================\\
            //==========================================      Funcionalidad del botón Recargar       ======================================\\
            //==============================================================================================================================\\

            $('#btnReloadNivelComplejidadTareas').on('click', function () {
                // Ocultar el grid de NivelComplejidadTareas
                document.getElementById('GridNivelComplejidadTareas').style.visibility = 'hidden';

                // Bloquear el contenido principal con el estilo "arrows"
                Notiflix.Block.arrows('.card', 'Actualizando datos...', {
                    backgroundColor: 'rgba(255, 255, 255, 0.8)', // Fondo semitransparente
                    svgSize: '50px', // Tamaño del ícono de flechas
                    messageFontSize: '16px', // Tamaño del mensaje
                });

                // Llamar a la función verNivelComplejidadTareas para recargar el grid
                verNivelComplejidadTareas().then((serverResponseTime) => {
                    // Tiempo adicional de 500 ms después de la respuesta del servidor
                    setTimeout(() => {
                        // Desbloquear el contenido principal
                        Notiflix.Block.remove('.card');

                        // Mostrar el grid después de que termine la animación de éxito
                        document.getElementById('GridNivelComplejidadTareas').style.visibility = 'visible';
                    }, serverResponseTime + 500); // Tiempo del servidor + 500 ms
                }).catch(() => {
                    // En caso de error, desbloquear el contenido principal
                    Notiflix.Block.remove('.card');

                    // Mostrar un mensaje de error con SweetAlert2 (puedes cambiarlo por Notiflix si prefieres)
                    Swal.fire({
                        title: 'Error',
                        text: 'Hubo un error al recargar los NivelComplejidadTareas.',
                        icon: 'error',
                        timer: 2000,
                        timerProgressBar: true,
                        showConfirmButton: false,
                        allowOutsideClick: false,
                        allowEscapeKey: false,
                        allowEnterKey: false
                    });

                    // Mostrar el grid incluso si hay un error
                    document.getElementById('GridNivelComplejidadTareas').style.visibility = 'visible';
                });
            });

            //============================================================================================================================\\
            //================================= Funcionalidad del boton de Agregar NivelComplejidadTareas ==================================\\
            //==============================================================================================================================\\

            $("#FormCrearProyecto").validate({
                rules: {
                    InpNivelComplejidadTareasDescripcion: {
                        required: true,
                        minlength: 3,
                        maxlength: 150
                    },
                    InpEstatusDetalles: {
                        required: true,
                        minlength: 5,
                        maxlength: 150
                    }
                },
                messages: {
                    InpNivelComplejidadTareasDescripcion: {
                        required: "El nivel de complejidad es requerido.",
                        minlength: "Debe contener al menos 3 caracteres.",
                        maxlength: "No puede exceder los 150 caracteres."
                    },
                    InpEstatusDetalles: {
                        required: "Los detalles son requeridos.",
                        minlength: "Debe contener al menos 5 caracteres.",
                        maxlength: "No puede exceder los 150 caracteres."
                    }
                },
                submitHandler: function (form, event) {
                    event.preventDefault();
                    agregarNivelComplejidadTarea();
                },
                errorPlacement: function (error, element) {
                    error.addClass('col-12 mt-2 bg-danger text-white text-center p-2 rounded');
                    error.insertAfter(element);
                },
                errorElement: 'div',
                errorClass: 'alert-validate'
            });

            // Evento para limpiar el formulario al cerrar el modal
            $('#UserModal').on('hidden.bs.modal', function () {
                $('#FormCrearProyecto')[0].reset(); // Restablece el formulario.
                $('#FormCrearProyecto').validate().resetForm();
            });

            // Función para enviar los datos del formulario mediante AJAX
            function agregarNivelComplejidadTarea() {
                var formData = new FormData();
                formData.append('NivelComplejidadTareaDescripcion', $('#InpNivelComplejidadTareasDescripcion').val());
                formData.append('Detalles', $('#InpDetalles').val());

                $.ajax({
                    type: "POST",
                    url: '@Url.Action("AgregarNivelComplejidadTarea", "Catalogos")',
                    data: formData,
                    processData: false,
                    contentType: false,
                    beforeSend: function () {
                        // Aquí no se oculta el grid ni se muestra el bloqueo
                    },
                    success: function (response) {
                        if (response.resultado) {
                            // Ocultar el grid de puestos
                            document.getElementById('GridNivelComplejidadTareas').style.visibility = 'hidden';

                            // Bloquear el contenido principal con el estilo "hourglass"
                            Notiflix.Block.circle('.card', 'Agregando Nivel de Complejidad...', {
                                backgroundColor: 'rgba(255, 255, 255, 0.8)', // Fondo semitransparente
                                svgSize: '50px', // Tamaño del ícono de reloj de arena
                                messageFontSize: '16px', // Tamaño del mensaje
                            });

                            // Llamar a la función verPuestos para recargar el grid
                            verNivelComplejidadTareas().then((serverResponseTime) => {
                                // Tiempo adicional de 500 ms después de la respuesta del servidor
                                setTimeout(() => {
                                    // Desbloquear el contenido principal
                                    Notiflix.Block.remove('.card');

                                    // Mostrar el grid después de que termine la animación de éxito
                                    document.getElementById('GridNivelComplejidadTareas').style.visibility = 'visible';
                                }, serverResponseTime + 500); // Tiempo del servidor + 500 ms
                            }).catch(() => {
                                // En caso de error, desbloquear el contenido principal
                                Notiflix.Block.remove('.card');
                                document.getElementById('GridNivelComplejidadTareas').style.visibility = 'visible';
                                // Mostrar un mensaje de error con SweetAlert2
                                Swal.fire({
                                    title: 'Error',
                                    text: 'Hubo un error al recargar los niveles de complejidad.',
                                    icon: 'error',
                                    timer: 2000,
                                    showConfirmButton: true,
                                    allowOutsideClick: false,
                                    allowEscapeKey: false,
                                    allowEnterKey: false
                                });

                                // Mostrar el grid incluso si hay un error
                                document.getElementById('GridNivelComplejidadTareas').style.visibility = 'visible';
                            });
                        } else {
                            // Mostrar un mensaje de error con SweetAlert2 si la respuesta no es exitosa
                            Swal.fire({
                                icon: "error",
                                title: "Error",
                                text: response.mensaje,
                                showConfirmButton: true,
                                allowOutsideClick: false,
                                allowEscapeKey: false,
                                allowEnterKey: false

                            });
                        }
                    },
                    error: function (jqXHR, textStatus, errorThrown) {
                        // Mostrar un mensaje de error con SweetAlert2 en caso de error en la solicitud
                        Swal.fire({
                            icon: "error",
                            title: "Error",
                            text: "Ocurrió un error al agregar el nivel de complejidad.",
                            showConfirmButton: true,
                            allowOutsideClick: false,
                            allowEscapeKey: false,
                            allowEnterKey: false
                        });

                        console.error("Error en la solicitud:", textStatus, errorThrown);
                    },
                    complete: function () {
                        // Desbloquear el contenido principal después de 500 ms adicionales
                        setTimeout(() => {
                            Notiflix.Block.remove('.card');
                        }, 500);
                    }
                });

                const UserModal = bootstrap.Modal.getInstance(document.getElementById('UserModal'));
                UserModal.hide();
            }

            //============================================================================================================================\\
            //=================================== Funcionalidad del botón Editar NivelComplejidadTareas ====================================\\
            //==============================================================================================================================\\

            let valoresIniciales = {}; // Almacena los valores iniciales del Estatus del Proyecto

            // Cerrar el modal
            $('.cerrarModalEditarNivelComplejidadTarea').on('click', function () {
                bootstrap.Modal.getInstance(document.getElementById('ModalEditarNivelComplejidadTarea')).hide();
            });

            $("#FormEditarNivelComplejidadTarea").validate({
                rules: {
                    InpNivelComplejidadTareasDescripcionEdit: {
                        required: true,
                        minlength: 3,
                        maxlength: 150
                    },
                    InpDetallesEdit: {
                        required: true,
                        minlength: 5,
                        maxlength: 150
                    }
                },
                messages: {
                    InpNivelComplejidadTareasDescripcionEdit: {
                        required: "El nivel de complejidad es requerido.",
                        minlength: "Debe contener al menos 3 caracteres.",
                        maxlength: "No puede exceder los 150 caracteres."
                    },
                    InpDetallesEdit: {
                        required: "Los detalles son requeridos.",
                        minlength: "Debe contener al menos 5 caracteres.",
                        maxlength: "No puede exceder los 150 caracteres."
                    }
                },
                submitHandler: function (form, event) {
                    event.preventDefault();
                    actualizarNivelComplejidadTarea();
                },
                errorPlacement: function (error, element) {
                    error.addClass('col-12 mt-2 bg-danger text-white text-center p-2 rounded');
                    error.insertAfter(element);
                },
                errorElement: 'div',
                errorClass: 'alert-validate'
            });

            // Selecciona todos los campos del formulario de edición
            const camposEdicion = ['#InpNivelComplejidadTareasDescripcionEdit', '#InpDetallesEdit'];

            // Función para habilitar el botón si algún campo ha cambiado
            function habilitarBotonActualizar() {
                let algunCampoCambiado = false;

                camposEdicion.forEach(function (campo) {
                    if ($(campo).val() !== '') {
                        algunCampoCambiado = true;
                    }
                });

                // Habilita el botón si algún campo ha cambiado
                if (algunCampoCambiado) {
                    $('#btnActualizarNivelComplejidadTarea').prop('disabled', false);
                } else {
                    $('#btnActualizarNivelComplejidadTarea').prop('disabled', true);
                }
            }

            // Escucha los cambios en los campos del formulario
            $('#FormEditarNivelComplejidadTarea').on('input change', function () {
                habilitarBotonActualizar();
            });

            // Evento para limpiar el formulario al cerrar el modal
            $('#ModalEditarNivelComplejidadTarea').on('hidden.bs.modal', function () {
                $('#FormEditarNivelComplejidadTarea')[0].reset(); // Restablece el formulario.
                $('#FormEditarNivelComplejidadTarea').validate().resetForm(); // Limpia los mensajes de validación.
                $('#btnActualizarNivelComplejidadTarea').prop('disabled', true); // Deshabilita el botón de actualizar
            });

            // Función para actualizar el puesto
            function actualizarNivelComplejidadTarea() {
                if (!$("#FormEditarNivelComplejidadTarea").valid()) { // Verifica si el formulario es válido
                    return; // Detiene la ejecución si el formulario no es válido
                }

                const id = $('#btnActualizarNivelComplejidadTarea').data('id'); // Obtiene el ID del puesto.
                const descripcion = $('#InpNivelComplejidadTareasDescripcionEdit').val(); // Obtiene la descripción.
                const detalles = $('#InpDetallesEdit').val();

                const formData = new FormData();
                formData.append('Id', id);
                formData.append('NivelComplejidadTareaDescripcion', descripcion);
                formData.append('Detalles', detalles);

                $.ajax({
                    type: "POST",
                    url: '@Url.Action("EditarNivelComplejidadTarea", "Catalogos")', // Asegúrate de que esta ruta sea correcta.
                    data: formData,
                    processData: false,
                    contentType: false,
                    beforeSend: function () {
                        // Aquí no se oculta el grid ni se muestra el bloqueo
                    },
                    success: function (response) {
                        if (response.resultado) {
                            // Ocultar el grid de puestos
                            document.getElementById('GridNivelComplejidadTareas').style.visibility = 'hidden';

                            // Bloquear el contenido principal con el estilo "hourglass"
                            Notiflix.Block.hourglass('.card', 'Actualizando Nivel de Complejidad...', {
                                backgroundColor: 'rgba(255, 255, 255, 0.8)', // Fondo semitransparente
                                svgSize: '50px', // Tamaño del ícono de reloj de arena
                                messageFontSize: '16px', // Tamaño del mensaje
                            });

                            // Llamar a la función verPuestos para recargar el grid
                            verNivelComplejidadTareas().then((serverResponseTime) => {
                                // Tiempo adicional de 500 ms después de la respuesta del servidor
                                setTimeout(() => {
                                    // Desbloquear el contenido principal
                                    Notiflix.Block.remove('.card');

                                    // Mostrar el grid después de que termine la animación de éxito
                                    document.getElementById('GridNivelComplejidadTareas').style.visibility = 'visible';
                                }, serverResponseTime + 500); // Tiempo del servidor + 500 ms
                            }).catch(() => {
                                // En caso de error, desbloquear el contenido principal
                                Notiflix.Block.remove('.card');
                                document.getElementById('GridNivelComplejidadTareas').style.visibility = 'visible';
                                // Mostrar un mensaje de error con SweetAlert2
                                Swal.fire({
                                    title: 'Error',
                                    text: 'Hubo un error al recargar los niveles de complejidad.',
                                    icon: 'error',
                                    timer: 2000,
                                    showConfirmButton: true,
                                    allowOutsideClick: false,
                                    allowEscapeKey: false,
                                    allowEnterKey: false
                                });

                                // Mostrar el grid incluso si hay un error
                                document.getElementById('GridNivelComplejidadTareas').style.visibility = 'visible';
                            });
                        } else {
                            // Mostrar un mensaje de error con SweetAlert2 si la respuesta no es exitosa
                            Swal.fire({
                                icon: "error",
                                title: "Error",
                                text: response.mensaje,
                                showConfirmButton: true,
                                allowOutsideClick: false,
                                allowEscapeKey: false,
                                allowEnterKey: false

                            });
                        }
                    },
                    error: function (jqXHR, textStatus, errorThrown) {
                        // Mostrar un mensaje de error con SweetAlert2 en caso de error en la solicitud
                        Swal.fire({
                            icon: "error",
                            title: "Error",
                            text: "Ocurrió un error al agregar el nivel de complejidad.",
                            showConfirmButton: true,
                            allowOutsideClick: false,
                            allowEscapeKey: false,
                            allowEnterKey: false
                        });

                        console.error("Error en la solicitud:", textStatus, errorThrown);
                    },
                    complete: function () {
                        // Desbloquear el contenido principal después de 500 ms adicionales
                        setTimeout(() => {
                            Notiflix.Block.remove('.card');
                        }, 500);
                    }
                });
                const ModalEditarNivelComplejidadTarea = bootstrap.Modal.getInstance(document.getElementById('ModalEditarNivelComplejidadTarea'));
                ModalEditarNivelComplejidadTarea.hide();
            }

            // Evento para el botón de actualizar
            $('#btnActualizarNivelComplejidadTarea').on('click', function () {
                if ($("#FormEditarNivelComplejidadTarea").valid()) { // Verifica si el formulario es válido
                    actualizarNivelComplejidadTarea(); // Llama a la función de actualización
                }
            });

            // Evento para limpiar el formulario al cerrar el modal
            $('#ModalEditarNivelComplejidadTarea').on('hidden.bs.modal', function () {
                $('#FormEditarNivelComplejidadTarea')[0].reset(); // Restablece el formulario.
                $('#FormEditarNivelComplejidadTarea').validate().resetForm();
            });

            //============================================================================================================================\\
            //================================== Funcionalidad del botón Eliminar NivelComplejidadTareas ===================================\\
            //==============================================================================================================================\\
            // Función para abrir el modal de eliminación de puesto.
            function EliminarPuesto(id, descripcion) {
                $(".nombreNivelComplejidadTarea").text(descripcion); // Muestra la descripción del puesto en el modal.
                $("#BtnEliminarNivelComplejidadTarea").data("id", id); // Asigna el ID al botón de eliminar.
                const modalEliminar = new bootstrap.Modal(document.getElementById("ModalEliminarNivelComplejidadTarea"));
                modalEliminar.show(); // Muestra el modal.
            }

            // Evento para abrir el modal de eliminación.
            $(document).on("click", ".abrirModalEliminarNivelComplejidadTarea", function () {
                let id = $(this).data("id"); // Extrae el ID del puesto usando un atributo data-*.
                let descripcion = $(this).data("nombre"); // Obtiene la descripción.
                EliminarPuesto(id, descripcion); // Llama a la función para abrir el modal.
            });

            // Evento para cerrar el modal de eliminación.
            $(".cerrarModalEliminarNivelComplejidadTarea").on("click", function () {
                const modalEliminar = bootstrap.Modal.getInstance(document.getElementById("ModalEliminarNivelComplejidadTarea"));
                modalEliminar.hide(); // Cierra el modal.
            });

            // Evento para manejar la eliminación del puesto.
            $("#FormEliminarNivelComplejidadTarea").on("submit", function (e) {
                e.preventDefault(); // Prevenir el envío del formulario por defecto.

                const id = $("#BtnEliminarNivelComplejidadTarea").data("id"); // Obtiene el ID del puesto.
                console.log("Eliminando puesto con ID:", id); // Registra el ID en consola.

                const formData = new FormData();
                formData.append('Id', id);

                $.ajax({
                    type: "POST",
                    url: '@Url.Action("DesactivarNivelComplejidadTarea", "Catalogos")', // Asegúrate de que la ruta sea correcta.
                    data: formData,
                    contentType: false, // Importante para FormData
                    processData: false, // Importante para FormData
                    beforeSend: function () {
                        // Aquí no se oculta el grid ni se muestra el bloqueo
                    },
                    success: function (response) {
                        if (response.resultado) {
                            // Ocultar el grid de puestos
                            document.getElementById('GridNivelComplejidadTareas').style.visibility = 'hidden';

                            // Bloquear el contenido principal con el estilo "hourglass"
                            Notiflix.Block.hourglass('.card', 'Eliminando Nivel de Complejidad...', {
                                backgroundColor: 'rgba(255, 255, 255, 0.8)', // Fondo semitransparente
                                svgSize: '50px', // Tamaño del ícono de reloj de arena
                                messageFontSize: '16px', // Tamaño del mensaje
                            });

                            // Llamar a la función verPuestos para recargar el grid
                            verNivelComplejidadTareas().then((serverResponseTime) => {
                                // Tiempo adicional de 500 ms después de la respuesta del servidor
                                setTimeout(() => {
                                    // Desbloquear el contenido principal
                                    Notiflix.Block.remove('.card');

                                    // Mostrar el grid después de que termine la animación de éxito
                                    document.getElementById('GridNivelComplejidadTareas').style.visibility = 'visible';
                                }, serverResponseTime + 500); // Tiempo del servidor + 500 ms
                            }).catch(() => {
                                // En caso de error, desbloquear el contenido principal
                                Notiflix.Block.remove('.card');
                                document.getElementById('GridNivelComplejidadTareas').style.visibility = 'visible';
                                // Mostrar un mensaje de error con SweetAlert2
                                Swal.fire({
                                    title: 'Error',
                                    text: 'Hubo un error al recargar los niveles de complejidad.',
                                    icon: 'error',
                                    timer: 2000,
                                    showConfirmButton: true,
                                    allowOutsideClick: false,
                                    allowEscapeKey: false,
                                    allowEnterKey: false
                                });

                                // Mostrar el grid incluso si hay un error
                                document.getElementById('GridNivelComplejidadTareas').style.visibility = 'visible';
                            });
                        } else {
                            // Mostrar un mensaje de error con SweetAlert2 si la respuesta no es exitosa
                            Swal.fire({
                                icon: "error",
                                title: "Error",
                                text: response.mensaje,
                                showConfirmButton: true,
                                allowOutsideClick: false,
                                allowEscapeKey: false,
                                allowEnterKey: false

                            });
                        }
                    },
                    error: function (jqXHR, textStatus, errorThrown) {
                        // Mostrar un mensaje de error con SweetAlert2 en caso de error en la solicitud
                        Swal.fire({
                            icon: "error",
                            title: "Error",
                            text: "Ocurrió un error al agregar el nivel de complejidad.",
                            showConfirmButton: true,
                            allowOutsideClick: false,
                            allowEscapeKey: false,
                            allowEnterKey: false
                        });

                        console.error("Error en la solicitud:", textStatus, errorThrown);
                    },
                    complete: function () {
                        // Desbloquear el contenido principal después de 500 ms adicionales
                        setTimeout(() => {
                            Notiflix.Block.remove('.card');
                        }, 500);
                    }
                });

                // Cierra el modal después de iniciar la solicitud AJAX
                const modalEliminar = bootstrap.Modal.getInstance(document.getElementById('ModalEliminarNivelComplejidadTarea'));
                modalEliminar.hide();
            });

            //============================================================================================================================\\
            //================================== Funcionalidad del botón Reactivar NivelComplejidadTareas ==================================\\
            //==============================================================================================================================\\
            // Función para abrir el modal de confirmación de reactivación de EstatusProyecto.
            function ConfirmarPuesto(id, descripcion) {
                $(".nombreConfirmarNivelComplejidadTarea").text(descripcion); // Muestra la descripción del puesto en el modal.
                $("#BtnConfirmarNivelComplejidadTarea").data("id", id); // Asigna el ID del puesto al botón de confirmación.
                const modalConfirmar = new bootstrap.Modal(document.getElementById("ModalConfirmarNivelComplejidadTarea"));
                modalConfirmar.show(); // Muestra el modal de confirmación.
            }

            // Evento para abrir el modal de confirmación al hacer clic en un botón específico.
            $(document).on("click", ".abrirModalConfirmarNivelComplejidadTarea", function () {
                let id = $(this).data("id"); // Obtiene el ID del puesto desde el atributo data-id.
                let descripcion = $(this).data("nombre"); // Obtiene la descripción del puesto desde el atributo data-descripcion.
                ConfirmarPuesto(id, descripcion); // Llama a la función para abrir el modal de confirmación.
            });

            // Evento para cerrar el modal de confirmación al hacer clic en un botón de cierre.
            $(".cerrarModalConfirmarNivelComplejidadTarea").on("click", function () {
                const modalConfirmar = bootstrap.Modal.getInstance(document.getElementById("ModalConfirmarNivelComplejidadTarea"));
                modalConfirmar.hide(); // Cierra el modal de confirmación.
            });

            // Evento para manejar el envío del formulario de confirmación de reactivación de puesto.
            $("#FormConfirmarNivelComplejidadTarea").on("submit", function (e) {
                e.preventDefault(); // Evita el envío tradicional del formulario.

                const id = $("#BtnConfirmarNivelComplejidadTarea").data("id"); // Obtiene el ID del puesto desde el botón de confirmación.
                console.log("Reactivando puesto con ID:", id); // Muestra el ID del puesto en la consola para depuración.

                const formData = new FormData();
                formData.append('Id', id); // Agrega el ID del puesto al FormData.

                $.ajax({
                    type: "POST",
                    url: '@Url.Action("ReactivarNivelComplejidadTarea", "Catalogos")', // URL de la acción que reactiva al puesto.
                    data: formData,
                    contentType: false, // Importante para FormData.
                    processData: false, // Importante para FormData.
                    beforeSend: function () {
                        // Aquí no se oculta el grid ni se muestra el bloqueo
                    },
                    success: function (response) {
                        if (response.resultado) {
                            // Ocultar el grid de puestos
                            document.getElementById('GridNivelComplejidadTareas').style.visibility = 'hidden';

                            // Bloquear el contenido principal con el estilo "hourglass"
                            Notiflix.Block.hourglass('.card', 'Reactivando Nivel de Complejidad...', {
                                backgroundColor: 'rgba(255, 255, 255, 0.8)', // Fondo semitransparente
                                svgSize: '50px', // Tamaño del ícono de reloj de arena
                                messageFontSize: '16px', // Tamaño del mensaje
                            });

                            // Llamar a la función verPuestos para recargar el grid
                            verNivelComplejidadTareas().then((serverResponseTime) => {
                                // Tiempo adicional de 500 ms después de la respuesta del servidor
                                setTimeout(() => {
                                    // Desbloquear el contenido principal
                                    Notiflix.Block.remove('.card');

                                    // Mostrar el grid después de que termine la animación de éxito
                                    document.getElementById('GridNivelComplejidadTareas').style.visibility = 'visible';
                                }, serverResponseTime + 500); // Tiempo del servidor + 500 ms
                            }).catch(() => {
                                // En caso de error, desbloquear el contenido principal
                                Notiflix.Block.remove('.card');
                                document.getElementById('GridNivelComplejidadTareas').style.visibility = 'visible';
                                // Mostrar un mensaje de error con SweetAlert2
                                Swal.fire({
                                    title: 'Error',
                                    text: 'Hubo un error al recargar los niveles de complejidad.',
                                    icon: 'error',
                                    timer: 2000,
                                    showConfirmButton: true,
                                    allowOutsideClick: false,
                                    allowEscapeKey: false,
                                    allowEnterKey: false
                                });

                                // Mostrar el grid incluso si hay un error
                                document.getElementById('GridNivelComplejidadTareas').style.visibility = 'visible';
                            });
                        } else {
                            // Mostrar un mensaje de error con SweetAlert2 si la respuesta no es exitosa
                            Swal.fire({
                                icon: "error",
                                title: "Error",
                                text: response.mensaje,
                                showConfirmButton: true,
                                allowOutsideClick: false,
                                allowEscapeKey: false,
                                allowEnterKey: false

                            });
                        }
                    },
                    error: function (jqXHR, textStatus, errorThrown) {
                        // Mostrar un mensaje de error con SweetAlert2 en caso de error en la solicitud
                        Swal.fire({
                            icon: "error",
                            title: "Error",
                            text: "Ocurrió un error al reactivar el nivel de complejidad.",
                            showConfirmButton: true,
                            allowOutsideClick: false,
                            allowEscapeKey: false,
                            allowEnterKey: false
                        });

                        console.error("Error en la solicitud:", textStatus, errorThrown);
                    },
                    complete: function () {
                        // Desbloquear el contenido principal después de 500 ms adicionales
                        setTimeout(() => {
                            Notiflix.Block.remove('.card');
                        }, 500);
                    }
                });

                // Cierra el modal de confirmación después de iniciar la solicitud AJAX.
                const modalConfirmar = bootstrap.Modal.getInstance(document.getElementById('ModalConfirmarNivelComplejidadTarea'));
                modalConfirmar.hide();
            });
        });

    </script>
}

